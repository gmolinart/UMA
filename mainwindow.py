
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide2 import QtCore, QtGui, QtWidgets
class Ui_ModelRenamer(object):
    def setupUi(self, ModelRenamer):
        ModelRenamer.setObjectName("ModelRenamer")
        ModelRenamer.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(ModelRenamer)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setObjectName("frame_2")
        self.formLayout = QtWidgets.QFormLayout(self.frame_2)
        self.formLayout.setObjectName("formLayout")
        self.treeView = QtWidgets.QTreeView(self.frame_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.treeView.sizePolicy().hasHeightForWidth())
        self.treeView.setSizePolicy(sizePolicy)
        self.treeView.setObjectName("treeView")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.treeView)
        self.horizontalLayout.addWidget(self.frame_2)
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(False)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.groupBox)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(9, 39, 361, 461))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.additional_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.additional_lb.setObjectName("additional_lb")
        self.gridLayout_3.addWidget(self.additional_lb, 6, 0, 1, 1)
        self.group_le = QtWidgets.QLineEdit(self.gridLayoutWidget_2)
        self.group_le.setObjectName("group_le")
        self.gridLayout_3.addWidget(self.group_le, 7, 1, 1, 1)
        self.position_cb = QtWidgets.QComboBox(self.gridLayoutWidget_2)
        self.position_cb.setObjectName("position_cb")
        self.gridLayout_3.addWidget(self.position_cb, 4, 1, 1, 1)
        self.position_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.position_lb.setObjectName("position_lb")
        self.gridLayout_3.addWidget(self.position_lb, 4, 0, 1, 1)
        self.index_le = QtWidgets.QLineEdit(self.gridLayoutWidget_2)
        self.index_le.setObjectName("index_le")
        self.gridLayout_3.addWidget(self.index_le, 3, 1, 1, 1)
        self.name_le = QtWidgets.QLineEdit(self.gridLayoutWidget_2)
        self.name_le.setObjectName("name_le")
        self.gridLayout_3.addWidget(self.name_le, 2, 1, 1, 1)
        self.name_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.name_lb.setObjectName("name_lb")
        self.gridLayout_3.addWidget(self.name_lb, 2, 0, 1, 1)
        self.preview_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.preview_lb.setObjectName("preview_lb")
        self.gridLayout_3.addWidget(self.preview_lb, 8, 1, 1, 1)
        self.index_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.index_lb.setObjectName("index_lb")
        self.gridLayout_3.addWidget(self.index_lb, 3, 0, 1, 1)
        self.resolution_cb = QtWidgets.QComboBox(self.gridLayoutWidget_2)
        self.resolution_cb.setObjectName("resolution_cb")
        self.gridLayout_3.addWidget(self.resolution_cb, 0, 1, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.gridLayoutWidget_2)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_3.addWidget(self.pushButton, 9, 1, 1, 1)
        self.mtl_cb = QtWidgets.QComboBox(self.gridLayoutWidget_2)
        self.mtl_cb.setObjectName("mtl_cb")
        self.gridLayout_3.addWidget(self.mtl_cb, 1, 1, 1, 1)
        self.group_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.group_lb.setObjectName("group_lb")
        self.gridLayout_3.addWidget(self.group_lb, 7, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem, 11, 1, 1, 1)
        self.mtl_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.mtl_lb.setObjectName("mtl_lb")
        self.gridLayout_3.addWidget(self.mtl_lb, 1, 0, 1, 1)
        self.resolution_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.resolution_lb.setObjectName("resolution_lb")
        self.gridLayout_3.addWidget(self.resolution_lb, 0, 0, 1, 1)
        self.geo_lb = QtWidgets.QLabel(self.gridLayoutWidget_2)
        self.geo_lb.setObjectName("geo_lb")
        self.gridLayout_3.addWidget(self.geo_lb, 5, 0, 1, 1)
        self.geo_cb = QtWidgets.QComboBox(self.gridLayoutWidget_2)
        self.geo_cb.setObjectName("geo_cb")
        self.gridLayout_3.addWidget(self.geo_cb, 5, 1, 1, 1)
        self.horizontalLayout.addWidget(self.groupBox)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        ModelRenamer.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(ModelRenamer)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        ModelRenamer.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(ModelRenamer)
        self.statusbar.setObjectName("statusbar")
        ModelRenamer.setStatusBar(self.statusbar)

        self.retranslateUi(ModelRenamer)
        QtCore.QMetaObject.connectSlotsByName(ModelRenamer)

    def retranslateUi(self, ModelRenamer):
        _translate = QtCore.QCoreApplication.translate
        ModelRenamer.setWindowTitle(_translate("ModelRenamer", "Model "))
        self.groupBox.setTitle(_translate("ModelRenamer", "Model Renamer"))
        self.additional_lb.setText(_translate("ModelRenamer", "Additional Attrs:"))
        self.position_lb.setText(_translate("ModelRenamer", "Position"))
        self.name_lb.setText(_translate("ModelRenamer", "Name"))
        self.preview_lb.setText(_translate("ModelRenamer", "PREVIEW"))
        self.index_lb.setText(_translate("ModelRenamer", "Index"))
        self.pushButton.setText(_translate("ModelRenamer", "Refactor"))
        self.group_lb.setText(_translate("ModelRenamer", "Group Name"))
        self.mtl_lb.setText(_translate("ModelRenamer", "Mtl Group"))
        self.resolution_lb.setText(_translate("ModelRenamer", "Resolution"))
        self.geo_lb.setText(_translate("ModelRenamer", "Geo Type"))

        
        
        
        
        
        
        
        
        
        
####################################################        
 # TODO: import current Qt staff
import sys

from cgl.plugins.Qt import QtCore, QtGui, QtWidgets

# import maya.cmds as cmds
#
# top_nodes = cmds.ls(assemblies=True, long=True)
# cameras = ['|persp', '|top', '|front', '|side']
# top_nodes = [node for node in top_nodes if node not in cameras]
#
#
# def hierarch_to_dict(top_nodes):
#     dict = {}
#     for node_name in top_nodes:
#         dict[node_name] = {}
#         children = cmds.listRelatives(node_name, children=True, fullPath=True)
#         if children:
#             print('we found nodes and children {0}-->{1}'.format(node_name, children))
#             dict.update({str(node_name): hierarch_to_dict(children)})
#         else:
#             dict
#
#     return dict


# nodes_data = hierarch_to_dict(top_nodes)

test_data = {'|high': {'|high|plastic_mtl': {}},
             '|mdl': {'|mdl|high': {'|mdl|high|metal_mtl': {
                 '|mdl|high|metal_mtl|hatchet_blade': {'|mdl|high|metal_mtl|hatchet_blade|hatchet_bladeShape': {}},
                 '|mdl|high|metal_mtl|hatchet_handle': {'|mdl|high|metal_mtl|hatchet_handle|hatchet_handleShape': {}}},
                 '|mdl|high|null1': {},
                 '|mdl|high|wood_mtl': {'|mdl|high|wood_mtl|hatchet_handle': {
                     '|mdl|high|wood_mtl|hatchet_handle|hatchet_handleShape': {}},
                     '|mdl|high|wood_mtl|hatchet_top': {
                         '|mdl|high|wood_mtl|hatchet_top|hatchet_topShape': {}}}}}}


class ModelRenamer(QtWidgets.QMainWindow):

    def __init__(self, parent=None):
        super(ModelRenamer, self).__init__()

        self.main_widget = QtWidgets.QWidget(self)
        self.setCentralWidget(self.main_widget)

        self.main_layout = QtWidgets.QVBoxLayout()

        self.tree_widget = TreeWidget(node_names=test_data, parent=self)
        self.main_layout.addWidget(self.tree_widget)

        self.main_widget.setLayout(self.main_layout)


# TODO: tree widget
# TODO: fill the widget with any hierarchy from maya
class TreeWidget(QtWidgets.QTreeWidget):
    item_clicked = QtCore.Signal()

    def __init__(self, node_names=None, parent=None):
        super(TreeWidget, self).__init__()
        self.widgets_nodes = {}
        self.setColumnCount(1)

        self.item_data = node_names
        for key in self.item_data.keys():
            widget = QtWidgets.QTreeWidgetItem(self, [key.split('|')[-1]])
            self.add_tw_item(widget, self.item_data.get(key))
            self.widgets_nodes.update({widget: key})

        self.itemClicked.connect(self.restore_path)

    def add_tw_item(self, parent, dict_piece):
        if dict_piece:
            for key in dict_piece.keys():
                widget = QtWidgets.QTreeWidgetItem([key.split('|')[-1]])
                parent.addChild(widget)
                self.widgets_nodes.update({widget: key})
                self.add_tw_item(widget, dict_piece.get(key))

    @staticmethod
    def restore_path(widget, col):
        name = '|' + widget.text(col)
        while widget:
            parent = widget.parent()
            if parent:
                parent_name = parent.text(col)
                name = '|' + parent_name + name
            widget = parent
        print('full name of the clicked widget is {}'.format(name))
        return name


# TODO: implDO: right widget with advanced comboboxesement rules through regexes(Guillermo)
# TODO: combine two widgets in one window
# TODO: make the tree widget values red if don't pass checks
# TODO: integrate widgets into the currect package

if __name__ == '__main__':
    app = QtWidgets.QApplication([])
    window = ModelRenamer(parent=None)
    window.show()
    app.exec_()
